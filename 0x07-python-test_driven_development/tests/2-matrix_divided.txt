The ``matrix_divided`` module
-----------------------------
----------------------------

Using ``matrix_divided``
-------------------------

Write a function that divides all elements of a matrix.

Prototype: def matrix_divided(matrix, div):
matrix must be a list of lists of integers or floats, otherwise raise a TypeError exception with the message matrix must be a matrix (list of lists) of integers/floats
Each row of the matrix must be of the same size, otherwise raise a TypeError exception with the message Each row of the matrix must have the same size
div must be a number (integer or float), otherwise raise a TypeError exception with the message div must be a number
div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError exception with the message division by zero
All elements of the matrix should be divided by div, rounded to 2 decimal places
Returns a new matrix
You are not allowed to import any module


Python 3.8.10 (default, Mar 15 2022, 12:22:08) 
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.0, 4.0, 3.0], [10.0, 8.0, 6.0], [20.0, 16.0, 12.0]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[3.33, 2.67, 2.0], [6.67, 5.33, 4.0], [13.33, 10.67, 8.0]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = "5"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 21, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 4.5557
>>> matrix_divided(matrix, div)
[[2.2, 1.76, 1.32], [4.39, 3.51, 2.63], [8.78, 7.02, 5.27]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.0, 4.0, 3.0], [10.0, 8.0, 6.0], [20.0, 16.0, 12.0]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.0, 4.0, 3.0], [10.0, 8.0, 6.0], [20.0, 16.0, 12.0]]
>>> matrix = [[10.25, 8.25, 6.25], [20.25, 16.25, 12.25], [40.25, 32.25, 24.25]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.12, 4.12, 3.12], [10.12, 8.12, 6.12], [20.12, 16.12, 12.12]]
>>> matrix = [[10.25, 8.25, 6.25], [20.25, 16.25, 12.25], [40.25, 32.25, "24.25"]]
>>> di = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[10.25, 8.25, 6.25], [20.25, "16.25", 12.25], [40.25, 32.25, 24.25]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [["10.25", 8.25, 6.25], [20.25, 16.25, 12.25], [40.25, 32.25, 24.25]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[10, 8], 5]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[10, 8], [5, 10]]
>>> div = 2
>>> len(matrix_divided(matrix, div)) == len(matrix)
True
>>> 
